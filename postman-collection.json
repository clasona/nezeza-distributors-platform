{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789abc",
		"name": "Nezeza Order & Shipping Workflow",
		"description": "Complete testing collection for order creation and shipping workflow including payment processing, order management, and shipping label generation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000/api/v1",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "paymentIntentId",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		},
		{
			"key": "subOrderId",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('authToken', response.token);",
									"    pm.test('Login successful', function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"} else {",
									"    pm.test('Login failed', function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"buyer@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					}
				}
			]
		},
		{
			"name": "2. Shipping Options",
			"item": [
				{
					"name": "Get Shipping Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Shipping options retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.eql(true);",
									"    pm.expect(response.shippingGroups).to.be.an('array');",
									"    ",
									"    // Store first shipping group and rate for later use",
									"    if (response.shippingGroups.length > 0) {",
									"        const firstGroup = response.shippingGroups[0];",
									"        if (firstGroup.deliveryOptions && firstGroup.deliveryOptions.length > 0) {",
									"            pm.collectionVariables.set('selectedRateId', firstGroup.deliveryOptions[0].rateId);",
									"            pm.collectionVariables.set('sellerId', firstGroup.groupId);",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cartItems\": [\n    {\n      \"productId\": \"64f1a1b2c3d4e5f6a7b8c9d0\",\n      \"product\": {\n        \"_id\": \"64f1a1b2c3d4e5f6a7b8c9d0\",\n        \"title\": \"Sample Product\",\n        \"price\": 29.99,\n        \"taxRate\": 8.5,\n        \"weight\": 1.5,\n        \"length\": 8,\n        \"width\": 6,\n        \"height\": 4\n      },\n      \"quantity\": 2,\n      \"price\": 29.99,\n      \"sellerStoreId\": {\n        \"_id\": \"64f1a1b2c3d4e5f6a7b8c9d1\",\n        \"address\": {\n          \"street1\": \"123 Seller St\",\n          \"city\": \"Chicago\",\n          \"state\": \"IL\",\n          \"zipCode\": \"60601\",\n          \"country\": \"US\"\n        }\n      }\n    }\n  ],\n  \"customerAddress\": {\n    \"street1\": \"456 Customer Ave\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"US\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/shipments/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"shipments",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "3. Payment & Order Creation",
			"item": [
				{
					"name": "Create Payment Intent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Payment intent created successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.clientSecret).to.exist;",
									"    pm.expect(response.paymentIntentId).to.exist;",
									"    pm.collectionVariables.set('paymentIntentId', response.paymentIntentId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderItems\": [\n    {\n      \"productId\": \"64f1a1b2c3d4e5f6a7b8c9d0\",\n      \"product\": {\n        \"_id\": \"64f1a1b2c3d4e5f6a7b8c9d0\",\n        \"title\": \"Sample Product\",\n        \"taxRate\": 8.5\n      },\n      \"quantity\": 2,\n      \"price\": 29.99,\n      \"sellerStoreId\": \"64f1a1b2c3d4e5f6a7b8c9d1\"\n    }\n  ],\n  \"shippingAddress\": {\n    \"street1\": \"456 Customer Ave\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"US\"\n  },\n  \"selectedShippingOptions\": {\n    \"64f1a1b2c3d4e5f6a7b8c9d1\": \"{{selectedRateId}}\"\n  },\n  \"shippingTotal\": 12.99\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/payment/create-payment-intent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment",
								"create-payment-intent"
							]
						}
					}
				},
				{
					"name": "Simulate Stripe Webhook - Payment Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Webhook processed successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.received).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "stripe-signature",
								"value": "test_signature"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"payment_intent.succeeded\",\n  \"data\": {\n    \"object\": {\n      \"id\": \"{{paymentIntentId}}\",\n      \"amount\": 6997,\n      \"currency\": \"usd\",\n      \"status\": \"succeeded\",\n      \"payment_method\": \"pm_1234567890abcdef\",\n      \"metadata\": {\n        \"tempOrderDataId\": \"temp_order_id_placeholder\",\n        \"totalAmount\": \"69.97\",\n        \"subtotal\": \"59.98\",\n        \"totalTax\": \"5.10\",\n        \"totalShipping\": \"12.99\",\n        \"buyerId\": \"64f1a1b2c3d4e5f6a7b8c9d2\",\n        \"customerEmail\": \"buyer@example.com\",\n        \"customerFirstName\": \"John\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/payment/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment",
								"webhook"
							]
						}
					}
				},
				{
					"name": "Get Order by Payment Intent ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Order retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.order).to.exist;",
									"    pm.collectionVariables.set('orderId', response.order._id);",
									"    ",
									"    // Get first suborder ID for shipping tests",
									"    if (response.order.subOrders && response.order.subOrders.length > 0) {",
									"        pm.collectionVariables.set('subOrderId', response.order.subOrders[0]);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders/buying/payment/{{paymentIntentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"buying",
								"payment",
								"{{paymentIntentId}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "4. Order Management",
			"item": [
				{
					"name": "Get Single Order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{orderId}}"
							]
						}
					}
				},
				{
					"name": "Get Current User Orders (Buying)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders/buying",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"buying"
							]
						}
					}
				},
				{
					"name": "Get Seller Orders (Selling)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders/selling",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"selling"
							]
						}
					}
				}
			]
		},
		{
			"name": "5. SubOrder Management",
			"item": [
				{
					"name": "Update SubOrder Status to Processing",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fulfillmentStatus\": \"Processing\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orders/sub/{{subOrderId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"sub",
								"{{subOrderId}}",
								"status"
							]
						}
					}
				},
				{
					"name": "Update SubOrder Status to Awaiting Shipment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fulfillmentStatus\": \"Awaiting Shipment\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orders/sub/{{subOrderId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"sub",
								"{{subOrderId}}",
								"status"
							]
						}
					}
				}
			]
		},
		{
			"name": "6. Shipping Label Management",
			"item": [
				{
					"name": "Create Shipping Label for SubOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Shipping label created successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.eql(true);",
									"    pm.expect(response.trackingNumber).to.exist;",
									"    pm.expect(response.labelUrl).to.exist;",
									"    ",
									"    // Store tracking info for subsequent tests",
									"    pm.collectionVariables.set('trackingNumber', response.trackingNumber);",
									"    pm.collectionVariables.set('carrier', response.carrier);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subOrderId\": \"{{subOrderId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/suborder/label",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"suborder",
								"label"
							]
						}
					}
				},
				{
					"name": "Get Shipping Label for SubOrder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shipping/suborder/{{subOrderId}}/label",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"suborder",
								"{{subOrderId}}",
								"label"
							]
						}
					}
				},
				{
					"name": "Mark SubOrder as Shipped",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subOrderId\": \"{{subOrderId}}\",\n  \"trackingNumber\": \"{{trackingNumber}}\",\n  \"carrier\": \"{{carrier}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/suborder/ship",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"suborder",
								"ship"
							]
						}
					}
				}
			]
		},
		{
			"name": "7. Order Status Updates",
			"item": [
				{
					"name": "Update Order to Fulfilled",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders/{{orderId}}/update/fulfillment/fulfilled",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{orderId}}",
								"update",
								"fulfillment",
								"fulfilled"
							]
						}
					}
				},
				{
					"name": "Update Order to Shipped",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders/{{orderId}}/update/fulfillment/shipped",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{orderId}}",
								"update",
								"fulfillment",
								"shipped"
							]
						}
					}
				},
				{
					"name": "Update Order to Delivered",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders/{{orderId}}/update/fulfillment/delivered",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{orderId}}",
								"update",
								"fulfillment",
								"delivered"
							]
						}
					}
				}
			]
		},
		{
			"name": "8. Tracking & Monitoring",
			"item": [
				{
					"name": "Track Standard Shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"trackingNumber\": \"{{trackingNumber}}\",\n  \"carrier\": \"{{carrier}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/shipments/tracks/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"shipments",
								"tracks",
								""
							]
						}
					}
				},
				{
					"name": "List All Shipments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/shipping/shipments?page=1&results=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"shipments"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "results",
									"value": "10"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "9. Alternative Shipping Methods",
			"item": [
				{
					"name": "Get Shipping Rates for Specific Seller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sellerAddress\": {\n    \"street1\": \"123 Seller St\",\n    \"city\": \"Chicago\",\n    \"state\": \"IL\",\n    \"zipCode\": \"60601\",\n    \"country\": \"US\"\n  },\n  \"customerAddress\": {\n    \"street1\": \"456 Customer Ave\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"US\"\n  },\n  \"items\": [\n    {\n      \"quantity\": 2,\n      \"weight\": 1.5,\n      \"length\": 8,\n      \"width\": 6,\n      \"height\": 4\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/shipments/rates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"shipments",
								"rates"
							]
						}
					}
				},
				{
					"name": "Create Direct Shipping Label",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rateId\": \"{{selectedRateId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/shipments/labels/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"shipments",
								"labels",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "10. Error Handling & Edge Cases",
			"item": [
				{
					"name": "Test Invalid Shipping Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cartItems\": [\n    {\n      \"productId\": \"64f1a1b2c3d4e5f6a7b8c9d0\",\n      \"quantity\": 1,\n      \"price\": 29.99\n    }\n  ],\n  \"customerAddress\": {\n    \"street1\": \"Invalid Address\",\n    \"city\": \"\",\n    \"state\": \"\",\n    \"zipCode\": \"00000\",\n    \"country\": \"\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/shipments/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"shipments",
								""
							]
						}
					}
				},
				{
					"name": "Test Missing SubOrder ID for Label",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subOrderId\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/shipping/suborder/label",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"shipping",
								"suborder",
								"label"
							]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
